The purpose of this project is to test different memory access patterns across large buffers. Generally, processors are optimized for sequential access, so reading from start to finish ought to be the fastest thing. But for when that isn't an option, I built this test routine to try accessing each address once but using different patterns. Patterns are essentially different groupings of the data into sub-arrays, which are striped over in column order in two, three, or four-axis runs.

Basically you want to run this using the Time Profiler instrument and drill in to view the code of the +runTests method in the KCMemoryAccessTests class. Read the implementation of that class for more information. In particular, you can adjust the size of the buffer to approximate the problem you're trying to solve, and then see how different patterns of memory access weigh in performance-wise.
